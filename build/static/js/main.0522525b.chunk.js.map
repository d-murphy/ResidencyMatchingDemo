{"version":3,"sources":["App.js","index.js"],"names":["App","React","useState","systemStatus","setSystemStatus","systemMessage","setSystemMessage","applicants","setApps","programs","setPrgms","useEffect","reset","fetch","then","res","json","data","solved","Object","values","applicantList","map","applicant","i","className","stable","tentativeMatch","name","rank","p","offered","tentMatch","programsList","program","capacity","href","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0522525b.chunk.js","sourcesContent":["import './App.css';\r\nimport React from 'react';\r\n\r\nfunction App() {\r\n\r\n    const [systemStatus, setSystemStatus] = React.useState(\"Start\");\r\n    const [systemMessage, setSystemMessage] = React.useState(\"\");\r\n    const [applicants, setApps] = React.useState([]);\r\n    const [programs, setPrgms] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n      reset();\r\n    }, []);\r\n\r\n    const reset = function(){\r\n      fetch(`/reset`)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setSystemStatus(data.solved);\r\n        setSystemMessage(data.systemMessage);\r\n        setApps(data.applicants);\r\n        setPrgms(Object.values(data.programs));\r\n      })\r\n\r\n    }\r\n\r\n    const oneTurn = function(){\r\n      fetch(`/oneStep`)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setSystemStatus(data.solved);\r\n        setSystemMessage(data.systemMessage);\r\n        setApps(data.applicants);\r\n        setPrgms(Object.values(data.programs));\r\n      })\r\n    }\r\n\r\n    const solve = function (){\r\n      fetch(`/solve`)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setSystemStatus(data.solved);\r\n        setSystemMessage(data.systemMessage);\r\n        setApps(data.applicants);\r\n        setPrgms(Object.values(data.programs));\r\n      })   \r\n    }\r\n\r\n    let applicantList = applicants.map((applicant, i) => {\r\n      return (\r\n              <div key={i} className={`applicant-box applicant-stable-${applicant.stable} applicant-match-${applicant.tentativeMatch}`}>\r\n                <div className=\"app-name\">{applicant.name}</div>\r\n                <div className=\"app-ranks\">{applicant.rank.map(\r\n                  (p,i)=>{\r\n                    return(\r\n                      <div key={i} className={`${applicant.name}${p.offered} applicant-proposed-${p.offered}-acc-${p.tentMatch}`}>\r\n                        {`${i+1}. ${p.name}`}\r\n                      </div>)\r\n                    })}\r\n                </div>\r\n                <div className=\"space-filler\"></div>\r\n                <div className=\"app-match\">\r\n                  <div className=\"app-status-label\">\r\n                    {systemStatus === false ? \"Tentative Match:\" : \"Final Match: \"}\r\n                  </div>\r\n                  <div className=\"app-status\">{applicant.tentativeMatch === \"\" ? \"TBD\" : applicant.tentativeMatch}</div>\r\n                </div>\r\n              </div>\r\n             )\r\n    })\r\n\r\n    let programsList = programs.map((program, i) => {\r\n      return (\r\n              <div key={i} className=\"program-box\">\r\n                <div className=\"program-name\">{program.name}</div>\r\n                <div className=\"program-capcity\">Program Capacity: {program.capacity}</div>\r\n                <div className=\"program-ranks\">{program.rank.map(\r\n                  (p,i)=>{\r\n                    return(\r\n                      <div key={i} className={`${p.name}${p.offered} applicant-proposed-${p.offered}-acc-${p.tentMatch}`}>\r\n                        {`${i+1}. ${p.name}`}\r\n                      </div>)\r\n                    })}\r\n                </div>\r\n              </div>\r\n             )\r\n    })\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"heading\"><h1>A Demo of the Medical Resident Match Algorithm</h1></div>\r\n      <div className=\"sub-heading\">\r\n        The National Resident Match Program uses a version of the&nbsp;\r\n        <a href=\"https://en.wikipedia.org/wiki/Stable_marriage_problem\">stable matching algorithm</a> \r\n        &nbsp;to pair medical residency applicants with available positions. \r\n        This page demonstrates the stages of the algorithm, similar to&nbsp; \r\n        <a href=\"https://www.nrmp.org/matching-algorithm/\">this video</a> on the NRMP site.  \r\n      </div>\r\n      <div className=\"system-message-and-controls\">\r\n        <div className=\"system-message\">\r\n          <b>Match Status: </b>{systemMessage}\r\n        </div>\r\n        <div className=\"space-filler\"></div>\r\n        <div className=\"control-row\">\r\n          <button className={`button disable-${systemStatus}`} onClick={oneTurn}>Play Next Turn</button>\r\n          <button className={`button disable-${systemStatus}`} onClick={solve}>Complete the Match</button>\r\n          <button className=\"button\" onClick={reset}>Reset and Randomize</button>\r\n        </div>\r\n      </div>\r\n      <div className=\"applicant-heading\"><h2>Applicants</h2></div>\r\n      <div className=\"applicant-row\">\r\n        {applicantList}\r\n      </div>\r\n      <div className=\"program-heading\"><h2>Programs</h2></div>\r\n      <div className=\"program-row\">\r\n        {programsList}\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}